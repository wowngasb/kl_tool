clear all
clf
clc
grid on
hold on

%%  read pic
pic_n = 1;
pic_name = strcat('wowfish+' , int2str(pic_n) , '.bmp');
fprintf('PIC: %s \n',pic_name);

I = imread( pic_name );
II = I;


[pic_h, pic_w, pic_n]=size(I);

%%  cut pic

cut_r = 40;
cut_g = 80;
cut_b = 80;

for th = 1:pic_h
    for tw = 1:pic_w
        t_r = I(th, tw, 1);
        t_g = I(th, tw, 2);
        t_b = I(th, tw, 3);
        if (t_r>cut_r) || (t_g>cut_g) || (t_b>cut_b)
            I(th, tw, 1) = 255;
        	I(th, tw, 2) = 255;
        	I(th, tw, 3) = 255;
            [th,tw]
        end
    end
end


%%   
XX = [randn(50,2)+ones(50,2);randn(50,2)-ones(50,2);randn(50,2)+[ones(50,1),-ones(50,1)]];


opts = statset('Display','final');

%调用Kmeans函数
%X N*P的数据矩阵
%Idx N*1的向量,存储的是每个点的聚类标号
%Ctrs K*P的矩阵,存储的是K个聚类质心位置
%SumD 1*K的和向量,存储的是类间所有点与该类质心点距离之和
%D N*K的矩阵，存储的是每个点与所有质心的距离;

[Idx,Ctrs,SumD,D] = kmeans(X,3,'Replicates',3,'Options',opts);

%画出聚类为1的点。X(Idx==1,1),为第一类的样本的第一个坐标；X(Idx==1,2)为第二类的样本的第二个坐标
plot(X(Idx==1,1),X(Idx==1,2),'r.','MarkerSize',14)
hold on
plot(X(Idx==2,1),X(Idx==2,2),'b.','MarkerSize',14)
hold on
plot(X(Idx==3,1),X(Idx==3,2),'g.','MarkerSize',14)

%绘出聚类中心点,kx表示是圆形
plot(Ctrs(:,1),Ctrs(:,2),'kx','MarkerSize',14,'LineWidth',4)
plot(Ctrs(:,1),Ctrs(:,2),'kx','MarkerSize',14,'LineWidth',4)
plot(Ctrs(:,1),Ctrs(:,2),'kx','MarkerSize',14,'LineWidth',4)

legend('Cluster 1','Cluster 2','Cluster 3','Centroids','Location','NW')

Ctrs
SumD